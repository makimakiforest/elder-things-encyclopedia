// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"io"

	"github.com/google/uuid"
)

func (s *ErrRespStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type CharactersGetOK struct {
	Characters []CharactersGetOKCharactersItem `json:"characters"`
}

// GetCharacters returns the value of Characters.
func (s *CharactersGetOK) GetCharacters() []CharactersGetOKCharactersItem {
	return s.Characters
}

// SetCharacters sets the value of Characters.
func (s *CharactersGetOK) SetCharacters(val []CharactersGetOKCharactersItem) {
	s.Characters = val
}

type CharactersGetOKCharactersItem struct {
	ID      uuid.UUID `json:"id"`
	Name    string    `json:"name"`
	Profile string    `json:"profile"`
}

// GetID returns the value of ID.
func (s *CharactersGetOKCharactersItem) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CharactersGetOKCharactersItem) GetName() string {
	return s.Name
}

// GetProfile returns the value of Profile.
func (s *CharactersGetOKCharactersItem) GetProfile() string {
	return s.Profile
}

// SetID sets the value of ID.
func (s *CharactersGetOKCharactersItem) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CharactersGetOKCharactersItem) SetName(val string) {
	s.Name = val
}

// SetProfile sets the value of Profile.
func (s *CharactersGetOKCharactersItem) SetProfile(val string) {
	s.Profile = val
}

type ErrResp struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrResp) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrResp) SetMessage(val OptString) {
	s.Message = val
}

// ErrRespStatusCode wraps ErrResp with StatusCode.
type ErrRespStatusCode struct {
	StatusCode int
	Response   ErrResp
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrRespStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrRespStatusCode) GetResponse() ErrResp {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrRespStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrRespStatusCode) SetResponse(val ErrResp) {
	s.Response = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type SystemPingGetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s SystemPingGetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}
